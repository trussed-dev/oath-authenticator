window.SIDEBAR_ITEMS = {"derive":[["Decodable","Derive the `Decodable` trait on a struct."],["Encodable","Derive the `Encodable` trait on a struct."]],"enum":[["Class","Class of BER tag."],["ErrorKind","Error type."]],"struct":[["Decoder","BER-TLV decoder."],["Encoder","BER-TLV encoder."],["Error","Error type."],["Length","BER-TLV-encoded length."],["SimpleTag","These are tags like in SIMPLE-TLV."],["Slice","Slice of at most `Length::max()` bytes."],["Tag","The tag field consists of a single byte encoding a tag number from 1 to 254. The values ‘00’ and ‘FF’ are invalid."],["TaggedValue","BER-TLV data object."]],"trait":[["Container","Multiple encodables in a container."],["Decodable","Decoding trait."],["Encodable","Encoding trait."],["EncodableHeapless","The equivalent of the `encode_to_vec` and `to_vec` methods."],["TagLike","This is the common trait that types to be used as tags are supposed to implement."],["Tagged","Types with an associated BER-TLV [`Tag`]."]],"type":[["Result","Result type."],["TaggedSlice","Raw BER-TLV data object `TaggedValue<Slice<'_>>`."]]};